version: '3'

tasks:
  install:
    desc: Install dependencies
    cmds:
      - pnpm install

  clean:
    desc: Clean
    cmds:
      - rm public/{sitemap.xml,robots.txt,feed.rss}
      - rm -r dist
    ignore_error: true

  prebuild:
    desc: Prebuild
    cmds:
      - task: clean
      - touch public/{sitemap.xml,robots.txt,feed.rss}
    ignore_error: true

  build:
    desc: Build
    cmds:
      - task: install
      - task: prebuild
      - pnpm run build

  posts:
    desc: List post files
    cmds:
      - ls src/pages/posts | grep \.md$ | sed 's/\.md$//' | grep {{.CLI_ARGS}}

  md2html:
    desc: Generate HTML from markdown
    cmds:
      - mkdir .medium || true
      - echo "Generating HTML..."
      - md2html -o .medium/{{.CLI_ARGS}}.html src/pages/posts/{{.CLI_ARGS}}.md
      - echo "Done."
    silent: true

  post2md:
    desc: Create draft post on Medium
    cmds:
      - echo "Posting a draft post to Medium..."
      - md-publisher publish .medium/{{.CLI_ARGS}}.html
      - echo "Done."
    silent: true

  update_dep:
    desc: Check whether the new version of the npm package broke the build.
    cmds:
      - task: init_dep_branch
        vars: { BRANCH_NAME: '{{.CLI_ARGS}}' }
      - ncu -u -f {{.CLI_ARGS}}
      - task: install
      - task: build
      - task: commit_dep_changes
        vars: { PACKAGE_NAME: '{{.CLI_ARGS}}' }
    silent: true

  update_deps:
    desc: Check whether the new version of the npm packages broke the build.
    cmds:
      - task: init_dep_branch
        vars: { BRANCH_NAME: 'upgrade' }
      - ncu -u -f {{.CLI_ARGS}}
      - task: install
      - task: build
      - task: commit_dep_changes
        vars: { PACKAGE_NAME: '{{.CLI_ARGS}}' }
    silent: true

  init_dep_branch:
    desc: Init git branch deps/*
    cmds:
      - git pull origin main:main
      - git switch deps/{{.BRANCH_NAME}} 2>/dev/null || git switch -c deps/{{.BRANCH_NAME}}
      - git rebase origin/main
    silent: true

  commit_dep_changes:
    desc: Commit changes after updating package version
    vars:
      PACKAGE_VERSION:
        sh: npm view {{.PACKAGE_NAME}} version
    cmds:
      - git add package.json pnpm-lock.yaml
      - |
        git commit -m "build(deps): update {{.PACKAGE_NAME}} to version {{.PACKAGE_VERSION}}"
    silent: true
